// DO NOT EDIT: Code generated by matcha from db.matcha

import gleam/string_tree.{type StringTree}

import ormlette_setup/types as s

pub fn render_builder(dbinfo dbinfo: s.DbInfo) -> StringTree {
    let builder = string_tree.from_string("")
    let builder = string_tree.append(builder, "
import gleam/pgo
import gleam/option


pub fn db() {
    pgo.connect(
      pgo.Config(
        ..pgo.default_config(),
        host: \"")
    let builder = string_tree.append(builder, dbinfo.host)
    let builder = string_tree.append(builder, "\",
        database: \"")
    let builder = string_tree.append(builder, dbinfo.database)
    let builder = string_tree.append(builder, "\",
        user: \"")
    let builder = string_tree.append(builder, dbinfo.user)
    let builder = string_tree.append(builder, "\",
        password: option.Some(\"")
    let builder = string_tree.append(builder, dbinfo.pass)
    let builder = string_tree.append(builder, "\"),
        rows_as_map: True,
        pool_size: 15,
      ),
    )
}
")

    builder
}

pub fn render(dbinfo dbinfo: s.DbInfo) -> String {
    string_tree.to_string(render_builder(dbinfo: dbinfo))
}

